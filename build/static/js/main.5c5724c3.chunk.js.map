{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/portfolioReducer.js","redux/reducers/watchListReducer.js","redux/reducers/communityReducer.js","redux/reducers/index.js","redux/sagas/loginLogoutSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/tradeBlockSaga.js","redux/sagas/portfolioSaga.js","redux/sagas/watchListSaga.js","redux/sagas/communitySaga.js","redux/sagas/editSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","firebase/index.js","components/UserPage/UserPage.js","components/UserTradeBlock/UserTradeBlock.js","components/UserPortfolio/AddCardForm.js","components/UserPortfolio/EditCardForm.js","components/UserPortfolio/TradeBlockButton.js","components/UserPortfolio/UserPortfolio.js","components/MemberTradeBlock/WatchButton.js","components/MemberTradeBlock/MemberTradeBlock.js","components/MemberPortfolio/MemberPortfolio.js","components/WatchList/WatchList.js","components/CommunityPage/MessageButton.js","components/CommunityPage/CommunityPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","portfolioReducer","memberUsernameReducer","watchListReducer","communityReducer","rootReducer","errors","loginUser","logoutUser","loginLogoutSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","updateTradeBlockSaga","tradeBlockSaga","call","user","tradeBlockSaga_marked","tradeBlockSaga_marked2","getPortfolioSaga","addCardSaga","deleteCardSaga","getUsernameSaga","portfolioSaga","concat","portfolioSaga_marked","portfolioSaga_marked2","delete","cardId","portfolioSaga_marked3","_context4","_marked4","_context5","_marked5","getWatchListSaga","updateWatchListSaga","removeWatchItemSaga","watchListSaga","watchListSaga_marked","watch_list_owner","watchListSaga_marked2","watch_list_id","watchListSaga_marked3","watchListSaga_marked4","getCommunitySaga","communitySaga","communitySaga_marked","communitySaga_marked2","editCardSaga","editSaga","card","editSaga_marked","editSaga_marked2","rootSaga","all","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","Link","to","id","Fragment","components_LogOutButton_LogOutButton","Footer","LoginPage","username","password","login","event","preventDefault","_this","handleInputChangeFor","propertyName","setState","Object","defineProperty","target","value","_this2","role","onSubmit","htmlFor","name","onChange","Component","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","AboutPage","components_Nav_Nav","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","storage","UserPage","image","url","progress","toTradeBlock","history","push","toPortfolio","toWatchlist","toCommunity","toSettings","navSquares","classes","squareContainer","Grid_default","container","item","xs","squares","inlineBlock","alignCenter","customBtn","backgroundRed","withStyles","theme","height","width","fontWeight","fontSize","color","border","margin","background","textAlign","fontFamily","backgroundBlack","backgroundGray","display","font20","marginTop","UserTradeBlock","cardInfo","alert","sport","details","updateTradeBlock","swal","title","icon","buttons","then","willDelete","card_id","tbBoolean","trade_block","tableHeadInfo","tradeBlockInsert","tradeBlockArr","map","TableHead_default","TableRow_default","TableCell_default","key","src","image_url","sizeImg","athlete","team","card_brand","price","date","substring","Button_default","Table_default","TableBody_default","newCard","cardBrand","tradeBlock","ready","open","AddCardForm","handleOpenClick","handleCloseClick","handleChange","selectImage","files","targetImage","uploadImage","ref","on","snapshot","thisProgess","Math","round","bytesTransferred","totalBytes","error","complete","child","getDownloadURL","thisUrl","addCard","addButton","variant","disabled","backgroundGreen","AddToQueue_default","marginRight","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","styleForm","FormGroup_default","FormControl_default","TextField_default","label","required","multiline","alt","DialogActions_default","_ref","customRadio","addReady","uploadReady","EditCardForm","confirmUpdate","uploadButton","Edit_default","floatLeft","float","TradeBlockButton","tradeBlockBtn","style","minWidth","AttachMoney_default","minHeight","backgroundOrange","MoneyOff_default","memberUsername","blackFont","UserPortfolio","deleteCard","text","deleteInfo","portfolioArray","UserPortfolio_EditCardForm","UserPortfolio_TradeBlockButton","UserPortfolio_AddCardForm","floatRight","WatchButton","updateWatch","owner","id_of_card","removeWatch","watchButton","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","backgroundGold","MemberTradeBlock","match","params","card_owner","MemberTradeBlock_WatchButton","headerDisplay","MemberPortfolio","WatchList","goToPortfolio","goToTradeBlock","watchListInsert","user_id","MessageButton","messageUser","messageButton","member","backgroundBlue","CommunityPage","communityInsert","count","CommunityPage_MessageButton","App","HashRouter","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c5724c3.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// the user will be on the redux state at -> state.userReducer\nexport default userReducer;\n","import { combineReducers } from 'redux';\n\nconst portfolioReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'PORTFOLIO':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst memberUsernameReducer = (state = [], action) => {\n   switch (action.type) {\n     case 'MEMBER_USERNAME':\n       return action.payload;\n     default:\n       return state;\n   }\n };\n\n export default combineReducers({\n   portfolioReducer,\n   memberUsernameReducer,\n });\n \n //export default portfolioReducer\n","const watchListReducer = (state = [], action) => {\n   switch (action.type) {\n     case 'WATCH_LIST':\n       return action.payload;\n     default:\n       return state;\n   }\n };\n \n export default watchListReducer;","const communityReducer = (state = [], action) => {\n   switch (action.type) {\n     case 'COMMUNITY':\n       return action.payload;\n     default:\n       return state;\n   }\n };\n \n export default communityReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport userReducer from './userReducer';\nimport portfolioReducer from './portfolioReducer';\nimport watchListReducer from './watchListReducer';\nimport communityReducer from './communityReducer';\n//import memberUsernameReducer from './memberUsernameReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // contains a value of 'login' or 'registration' to control which screen is shown\n  communityReducer,\n  portfolioReducer, // contains a SQL result from the /api/portfolio GET request\n  userReducer, // contains an id and username if someone is logged in\n  watchListReducer,\n  //memberUsernameReducer\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginLogoutSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginLogoutSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data }); //inside of userReducer\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n\nfunction* updateTradeBlockSaga(action) {\n   try {\n       yield call(axios.put, `/api/trade-block`, action.payload);\n       yield put({type: 'GET_USER_PORTFOLIO', payload: action.payload.user});  \n   }\n   catch (error) {\n       console.log(`PUT request to /api/trade-block UNSUCCESSFUL...`, error);\n   }\n}\n\n// function* removeFromTbSaga(action) {\n//    try {\n//        yield call(axios.put, `/api/trade-block`, action.payload);\n//        yield put({type: 'GET_USER_PORTFOLIO', payload: action.payload.user});  \n//    }\n//    catch (error) {\n//        console.log(`PUT request to /api/portfolio/edit/${action.payload.card} UNSUCCESSFUL...`, error);\n//    }\n// }\n\nfunction* tradeBlockSaga() {\n  yield takeLatest('UPDATE_TRADE_BLOCK', updateTradeBlockSaga);\n  //yield takeLatest('REMOVE_FROM_TRADE_BLOCK', removeFromTbSaga);\n}\n\nexport default tradeBlockSaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* getPortfolioSaga(action) {\n   try {\n      const response = yield call(axios.get, `/api/portfolio/${action.payload}`);\n      yield put({type: 'PORTFOLIO', payload: response.data});  \n   }\n   catch (error) {\n       console.log(`GET request to /api/portfolio/${action.payload} UNSUCCESSFUL...`);\n   }\n}\n\nfunction* addCardSaga(action) {\n   try {\n      yield call(axios.post, '/api/portfolio', action.payload);\n      yield put({type: 'GET_USER_PORTFOLIO', payload: action.payload.user});\n   }\n   catch (error) {\n      console.log(`POST request to /api/portfolio/${action.payload} UNSUCCESSFUL...`, error);\n   }\n}\n\nfunction* deleteCardSaga(action) {\n   try {\n       yield call(axios.delete, `/api/portfolio/delete/?id=${action.payload.cardId}`);\n       yield put({type: 'GET_USER_PORTFOLIO', payload: action.payload.user});  \n   }\n   catch (error) {\n       console.log(`DELETE request to /api/portfolio/${action.payload.cardId} UNSUCCESSFUL...`, error);\n   }\n}\n\nfunction* getUsernameSaga(action) {\n   try {\n      const response = yield call(axios.get, `/api/member-portfolio/${action.payload}`);\n      yield put({type: 'MEMBER_USERNAME', payload: response.data});  \n   }\n   catch (error) {\n       console.log(`GET request to /api/member-portfolio/${action.payload} UNSUCCESSFUL...`);\n   }\n}\n\nfunction* portfolioSaga() {\n  yield takeLatest('GET_USER_PORTFOLIO', getPortfolioSaga);\n  yield takeLatest('ADD_CARD', addCardSaga);\n  yield takeLatest('DELETE_CARD', deleteCardSaga);\n  yield takeLatest('GET_USERNAME', getUsernameSaga);\n}\n\nexport default portfolioSaga;\n","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* getWatchListSaga(action) {\n   try {\n      const response = yield call(axios.get, `/api/watch-list/${action.payload}`);\n      yield put({type: 'WATCH_LIST', payload: response.data});  \n   }\n   catch (error) {\n       console.log(`GET request to /api/watch-list/${action.payload} UNSUCCESSFUL...`, error);\n   }\n}\n\nfunction* updateWatchListSaga(action) {\n   try {\n      yield call(axios.post, '/api/watch-list/update', action.payload);\n      yield put({type: 'GET_WATCH_LIST', payload: action.payload.watch_list_owner});\n   }\n   catch (error) {\n      console.log(`POST request to /api/portfolio/${action.payload} UNSUCCESSFUL...`, error);\n   }\n}\n\nfunction* removeWatchItemSaga(action) {\n   try {\n       yield call(axios.delete, `/api/watch-list/delete/?id=${action.payload.watch_list_id}`);\n       yield put({type: 'GET_WATCH_LIST', payload: action.payload.watch_list_owner}); \n   }\n   catch (error) {\n       console.log(`DELETE request to /api/watch-list/delete/?id=${action.payload.watch_list_owner} UNSUCCESSFUL...`, error);\n   }\n}\n\nfunction* watchListSaga () {\n   yield takeLatest('GET_WATCH_LIST', getWatchListSaga);\n   yield takeLatest('UPDATE_WATCH_LIST', updateWatchListSaga);\n   yield takeLatest('REMOVE_WATCH_LIST_ITEM', removeWatchItemSaga);\n}\n\nexport default watchListSaga","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* getCommunitySaga(action) {\n   try {\n      console.log('IN getCommunity SAGA...') ;\n      const response = yield call(axios.get, `/api/community`);\n      yield put({type: 'COMMUNITY', payload: response.data});  \n   }\n   catch (error) {\n       console.log('GET request to /api/community UNSUCCESSFUL...');\n   }\n }\n\nfunction* communitySaga() {\n  yield takeLatest('GET_COMMUNITY', getCommunitySaga);\n}\n\nexport default communitySaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n\nfunction* editCardSaga(action) {\n   try {\n       yield call(axios.put, `/api/portfolio/edit/${action.payload.card}`, action.payload);\n       yield put({type: 'GET_USER_PORTFOLIO', payload: action.payload.user});  \n   }\n   catch (error) {\n       console.log(`PUT request to /api/portfolio/edit/${action.payload.card} UNSUCCESSFUL...`, error);\n   }\n}\n\nfunction* editSaga() {\n  yield takeLatest('UPDATE_CARD', editCardSaga);\n}\n\nexport default editSaga;\n","import { all } from 'redux-saga/effects';\nimport loginLogoutSaga from './loginLogoutSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport tradeBlockSaga from './tradeBlockSaga'; \nimport portfolioSaga from './portfolioSaga';\nimport watchListSaga from './watchListSaga';\nimport communitySaga from './communitySaga';\nimport editSaga from './editSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginLogoutSaga(),\n    registrationSaga(),\n    userSaga(),\n    tradeBlockSaga(),\n    portfolioSaga(),\n    watchListSaga(),\n    communitySaga(),\n    editSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })} //inside of loginLogoutSaga\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <h2 className=\"nav-title\">cardSwap</h2>\n    </Link>\n    <div className=\"nav-right\">\n      <Link className=\"nav-link\" to=\"/home\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {props.userReducer.id ? 'Home' : 'Login / Register'}\n      </Link>\n      {/* Show link to the user trade block, portfolio, community, and the logout button if the user is logged in */}\n      {props.userReducer.id && (\n        <>\n          <Link className=\"nav-link\" to=\"/trade-block\">\n            Trade Block\n          </Link>\n          <Link className=\"nav-link\" to=\"/user-portfolio\">\n            Portfolio\n          </Link>\n          <Link className=\"nav-link\" to=\"/watch-list\">\n            Watch List\n          </Link>\n          <Link className=\"nav-link\" to=\"/community\">\n            Community\n          </Link>\n          <LogOutButton className=\"nav-link\"/>\n        </>\n      )}\n      {/* Always show this link since the about page is not protected */}\n      <Link className=\"nav-link\" to=\"/about\">\n        About\n      </Link>\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  userReducer: state.userReducer,\n  portfolioReducer: state.portfolioReducer\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; 2018 Card Swap\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      }); //inside of loginLogoutSaga\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' }); //inside of errorsReducer\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <div>\n           <h2>cardSwap</h2>\n        </div>\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE' })}} //inside of loginModeReducer\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      }); //inside of registrationSaga\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <div>\n         <h2>cardSwap</h2>\n        </div>\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}} //inside of loginModeReducer\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    userReducer,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(userReducer.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport Nav from '../Nav/Nav';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <div>\n       <Nav/>\n      <ul >Technologies Used:\n        <li>Javascript</li>\n        <li>Node.js</li>\n        <li>Express.js</li>\n        <li>React w/ Redux and Sagas</li>\n        <li>Material-UI</li>\n        <li>HTML/CSS</li>\n      </ul>\n      <ul>Future Verisons:\n        <li>Payment system</li>\n        <li>Messaging</li>\n        <li>Allow users to display their top cards on the Community page</li>\n        <li>Additional Styling and animations</li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import firebase from 'firebase/app';\nimport 'firebase/storage';\n\n// Initialize Firebase\nvar config = {\n   apiKey: \"AIzaSyDdi3EMOD03Z9PTBn_HBtjikc42aMvXtMM\",\n   authDomain: \"card-swap-72684.firebaseapp.com\",\n   databaseURL: \"https://card-swap-72684.firebaseio.com\",\n   projectId: \"card-swap-72684\",\n   storageBucket: \"card-swap-72684.appspot.com\",\n   messagingSenderId: \"30007662181\"\n };\n \n firebase.initializeApp(config);\n \n const storage = firebase.storage();\n\n export {\n    storage, firebase as default\n }","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {storage} from '../../firebase';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport './UserPage.css'\nimport Nav from '../Nav/Nav';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n\nconst styling = theme => ({\n   customBtn: {\n      height: 40,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   squares: {\n      border: '3px solid black',\n      margin: 20,\n      height: 200,\n      width: 200,\n      color: 'black',\n      background: 'grey',\n      textAlign:'center',\n      fontFamily: 'Alegreya Sans SC',\n      fontSize: 40\n   },\n   squareContainer: {\n      width: 800,\n      margin:'auto'\n   },\n   backgroundBlack: {\n      background: 'black'\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   inlineBlock: {\n      display: 'inline-block'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\nclass UserPage extends Component { \n  \n   state = {\n      image: null,\n      url:'',\n      progress: 0\n   }\n\n   toTradeBlock = () => {\n      this.props.history.push('/trade-block')\n   }\n\n   toPortfolio = () => {\n      this.props.history.push('/user-portfolio')\n   }\n\n   toWatchlist = () => {\n      this.props.history.push('/watch-list')\n   }\n\n   toCommunity = () => {\n      this.props.history.push('/community')\n   }\n\n   toSettings = () => {\n      this.props.history.push('/settings')\n   }\n  \n   render(){\n      const {classes} = this.props\n      let navSquares;\n      \n      if(this.props.userReducer.id) { \n         navSquares = <div className={` ${classes.squareContainer}`}>\n            <Grid container>\n               <Grid className=\"homeSquare\" item xs={4}>\n                  <div onClick={this.toTradeBlock} className={`${classes.squares} ${classes.inlineBlock}`}>\n                     <p>Trade Block</p>\n                  </div>\n               </Grid>\n               <Grid className=\"homeSquare\" item xs = {4}>\n                  <div onClick={this.toPortfolio} className={`${classes.squares} ${classes.inlineBlock}`}>\n                     <p>Portfolio</p>\n                  </div>\n               </Grid>\n               <Grid className=\"homeSquare\" item xs = {4}>\n                  <div onClick={this.toWatchlist} className={`${classes.squares} ${classes.inlineBlock}`}>\n                     <p>Watch List</p>\n                  </div>\n               </Grid>\n               <Grid container className={classes.alignCenter}>\n                  <Grid className=\"homeSquare\" item xs = {6}>\n                     <div onClick={this.toCommunity} className={`${classes.squares} ${classes.inlineBlock}`}>\n                        <p>Community</p>\n                     </div>\n                  </Grid>\n                  <Grid className=\"homeSquare\" item xs = {6}>\n                     <div onClick={this.toSettings} className={`${classes.squares} ${classes.inlineBlock}`}>\n                        <p>Settings</p>\n                     </div>\n                  </Grid>\n               </Grid>\n            </Grid>\n         </div>\n      }\n      else {\n         navSquares = <div></div>;\n      }\n      \n      return (\n         <div >\n            <div>\n               <h2>cardSwap</h2>\n               <LogOutButton className={`${classes.customBtn} ${classes.backgroundRed}`}/>\n            </div>\n            <div className={classes.alignCenter}>\n               <h1>Welcome back, { this.props.userReducer.username }!</h1>\n            </div>\n            {navSquares}\n         </div>\n      );\n   }\n}\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  userReducer: state.userReducer,\n  portfolioReducer: state.portfolioReducer\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styling)(UserPage));\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport swal from 'sweetalert';\nimport Nav from '../Nav/Nav';\n\nconst styling = theme => ({\n   sizeImg: {\n      height: 230,\n      width: 150\n   },\n   customBtn: {\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white',\n      height: 10,\n      width: 80\n   },\n   backgroundGray: {\n      background: 'darkslategray'\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\n\nclass UserTradeBlock extends Component {\n   \n   componentDidMount(){\n      this.props.dispatch({type: \"GET_USER_PORTFOLIO\", payload: this.props.userReducer.id}); //inside of portfolioSaga\n   }\n\n   cardInfo = (card) => {\n      return (event) => {\n         alert(`Sport: ${card.sport}\n         \\nDetails: ${card.details}`);\n      }\n   }\n\n   updateTradeBlock = (card) => {\n      return (event) => {\n         swal({\n            title: \"Remove from Trade Block?\",\n            icon: \"warning\",\n            buttons: true,\n            \n          })\n         .then((willDelete) => {\n            if (willDelete) {\n               swal(\"Card Successfully Removed From Trade Block\", {\n                  icon: \"success\",\n               });\n               this.props.dispatch({\n                  type: 'UPDATE_TRADE_BLOCK',\n                  payload: {\n                     user: this.props.userReducer.id,\n                     cardId: card.card_id,\n                     tbBoolean: card.trade_block,\n                  }\n               })\n            }\n            else {\n               swal(\"This card will remain on your trade block...\");\n            }\n          });\n      }\n   }\n   \n   render(){\n      \n      console.log(this.props.userReducer);\n      console.log(this.props.portfolioReducer);\n\n      const {classes} = this.props\n\n     \n      let tradeBlockArr = []\n      let tableHeadInfo;\n      let tradeBlockInsert;\n      this.props.portfolioReducer.map(card => {\n         if(card.trade_block === true){\n            tradeBlockArr.push(card);\n         }\n      })\n      console.log(tradeBlockArr);\n      if(tradeBlockArr.length === 0){\n         tableHeadInfo = <br></br>\n         tradeBlockInsert = <p className={classes.alignCenter}>You currently have no cards on your trade block...</p>\n      }\n      else {\n         tableHeadInfo = <TableHead>\n               <TableRow >\n                  <TableCell className={classes.alignCenter}>Image</TableCell>\n                  <TableCell className={classes.alignCenter}>Athlete</TableCell>\n                  <TableCell className={classes.alignCenter}>Team</TableCell>\n                  <TableCell className={classes.alignCenter}>Card Brand</TableCell>\n                  <TableCell className={classes.alignCenter}>Price</TableCell>\n                  <TableCell className={classes.alignCenter}>Date Posted</TableCell>\n                  <TableCell className={classes.alignCenter}>Remove</TableCell>\n               </TableRow>\n            </TableHead>\n         \n         tradeBlockInsert = this.props && this.props.portfolioReducer.length > 0 ?\n            tradeBlockArr.map(card=>\n               <TableRow key={card.id}>\n                  <TableCell className={classes.alignCenter}>\n                     <img onClick={this.cardInfo(card)} src={card.image_url} className={classes.sizeImg} />\n                  </TableCell>\n                  <TableCell className={classes.alignCenter}>{card.athlete}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.team}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.card_brand}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.price}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.date.substring(0,10)}</TableCell>\n                  <TableCell className={classes.alignCenter}>\n                     <Button onClick={this.updateTradeBlock(card)} color=\"primary\" className={`${classes.customBtn} ${classes.backgroundRed}`}>Remove</Button>\n                  </TableCell>\n               </TableRow>\n         ) : <span></span>;\n      }\n      \n      return(\n         // <div>\n         // <section>\n         //    <h1 className={classes.alignCenter}>Your Trade Block</h1>\n         // </section>\n         // <Table>\n         //    <TableHead>\n         //       <TableRow >\n         //       <TableCell className={classes.alignCenter}>Image</TableCell>\n         //          <TableCell className={classes.alignCenter}>Athlete</TableCell>\n         //          <TableCell className={classes.alignCenter}>Team</TableCell>\n         //          <TableCell className={classes.alignCenter}>Card Brand</TableCell>\n         //          <TableCell className={classes.alignCenter}>Price</TableCell>\n         //          <TableCell className={classes.alignCenter}>Date Posted</TableCell>\n         //          <TableCell className={classes.alignCenter}>Remove</TableCell>\n         //       </TableRow>\n         //    </TableHead>\n         //    <TableBody >\n         //       {tradeBlockInsert}\n         //    </TableBody>\n         // </Table>\n         // </div>\n\n         <div>\n            <Nav/>\n            <section>\n               <h1 className={classes.alignCenter}>Your Trade Block</h1>\n            </section>\n            <Table>\n               {tableHeadInfo}\n               <TableBody>\n                  {tradeBlockInsert}\n               </TableBody>\n            </Table>\n         </div>\n         \n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   userReducer: state.userReducer,\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n});\n\n// const mapStateToProps = reduxState => ({\n//    reduxState\n// });\n\nexport default connect(mapStateToProps)(withStyles(styling)(UserTradeBlock));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {storage} from '../../firebase';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/AddToQueue';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Radio from '@material-ui/core/Radio';\n\nconst styling = theme => ({\n   sizeImg: {\n      height: 280,\n      width: 200\n   },\n   styleForm: {\n      width: 500,\n      background: `white`\n   },\n   customBtn: {\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white',\n      height: 10,\n      width: 80\n   },\n   customRadio: {\n\n   },\n   backgroundGreen: {\n      background: 'green'\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   backgroundGreen: {\n      background: 'forestgreen'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   margin: {\n      margin: 10\n   },\n   marginTop: {\n      marginTop: 100\n   },\n   marginRight: {\n      marginRight: 10\n   }\n})\n\nconst newCard = {\n   user: 0,\n   sport: '',\n   athlete: '',\n   team:'',\n   cardBrand:'',\n   tradeBlock: false,\n   price: '0',\n   details: '',\n   url:'',\n   image: null,\n   progress: 0,\n   ready: false,\n   open: false\n}\n\nclass AddCardForm extends Component {\n\n   state = newCard\n  \n   handleOpenClick = () => {\n      this.setState({ open: true });\n   };\n  \n   handleCloseClick = () => {\n      this.setState({ open: false });\n   };\n   \n   handleChange = (event) => {\n      this.setState({\n         [event.target.name]: event.target.value,\n      });\n   }\n\n   selectImage = (event) => {\n      if (event.target.files[0]) {\n         const targetImage = event.target.files[0]\n         this.setState({image: targetImage,})\n      }\n   }\n   \n   uploadImage = () => {\n      console.log(this.state);\n      if(this.state.image === null){\n         alert(`- Please select an image for the card.\n               \\n- For best quality, frame your image to the size of the card and use good lighting.\n               \\n- Images turn out best if scanned or taken with a high resolution camera`);\n         return\n      }\n      //ref has a function called put\n      const uploadTask = storage.ref(`images/${this.state.image.name}`).put(this.state.image);\n      //uploadTask.on('state_changed', progess, error, complete) //this is the format of the parameters, they are functions;\n      uploadTask.on('state_changed',\n      (snapshot) => {\n         //progress function parameter\n         const thisProgess = Math.round((snapshot.bytesTransferred / snapshot.totalBytes * 100)); //snapshot has a property of bytesTransferred\n         this.setState({progress: thisProgess});\n      },\n      (error) => {\n         //error function parameter\n         console.log(error)\n      },\n      (complete) => {\n         //complete function parameter\n         storage.ref('images').child(this.state.image.name).getDownloadURL().then(thisUrl => {\n            console.log(thisUrl);\n            alert('Image successfully uploaded!');\n            this.setState({\n               user: this.props.userReducer.id,\n               url: thisUrl,\n               ready: true\n            });\n         })\n      });\n   }\n\n   addCard = () => {\n      if(this.state.sport === '' || this.state.athlete === '' || this.state.team === ''\n         || this.state.cardBrand === '' || this.state.details === '') {\n            return alert(\"Invalid: Missing input(s)\");\n      }\n      else {\n         this.props.dispatch({type: 'ADD_CARD', payload: this.state}) //inside of \n         this.setState(newCard);\n      }\n   }\n   \n   render(){\n      \n      const {classes} = this.props\n\n      // Conditional rendering to keep the \"Add Card\" button disabled until the form is completed\n      let addButton = this.state.ready === false ?\n      <Button type=\"submit\" variant=\"contained\"  className={classes.customBtn} disabled>Add Card</Button>\n      : <Button onClick={this.addCard} variant=\"contained\"  className={`${classes.customBtn} ${classes.backgroundGreen}`}>Add Card</Button>\n      \n      return(\n         <section>\n            <div className={classes.alignCenter}>\n            \n               <Button onClick={this.handleOpenClick} className={ `${classes.customBtn} ${classes.backgroundGray}`} variant=\"outlined\">\n                  <AddIcon className={classes.marginRight}/> Add Card\n               </Button>\n            </div>\n            <Dialog\n               open={this.state.open}\n               onClose={this.handleCloseClick}\n               aria-labelledby=\"dialog-title\"\n            >\n               <DialogTitle id=\"dialog-title\">Add a New Card</DialogTitle>\n               <DialogContent>\n                  <DialogContentText>Fill out all of the information below.</DialogContentText>\n                  <form className={`${classes.styleForm} `}>\n                  {/* <h1 className={classes.alignCenter}>Add a New Card</h1> */}\n                     <FormGroup>\n                        <FormControl >\n                        <TextField\n                              id=\"outlined-athlete\"\n                              label=\"Sport\"\n                              name=\"sport\"\n                              value={this.state.sport}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-athlete\"\n                              label=\"Athlete\"\n                              name=\"athlete\"\n                              value={this.state.athlete}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-team\"\n                              label=\"Team\"\n                              name=\"team\"\n                              value={this.state.team}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-cardBrand\"\n                              label=\"Card Brand\"\n                              name=\"cardBrand\"\n                              value={this.state.cardBrand}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-details\"\n                              label=\"Details\"\n                              name=\"details\"\n                              value={this.state.details}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              multiline\n                              required\n                           /><br/>\n                           <Button onClick={this.uploadImage} variant=\"outlined\">Upload Image</Button>\n                           <input  type=\"file\" onChange={this.selectImage}/>\n                           <br/>\n                           <div>\n                              <img src={this.state.url || 'https://via.placeholder.com/280x200'} alt=\"Upload image\" height=\"280\" width=\"200\"></img>\n                           </div>\n                        </FormControl>\n                     </FormGroup>\n                  </form>\n               </DialogContent>\n               <DialogActions>\n                  {addButton}\n                  <Button onClick={this.handleCloseClick} className={`${classes.customBtn} ${classes.backgroundGray}`} variant=\"contained\">Cancel</Button>\n               </DialogActions>\n            </Dialog>\n         </section>\n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   portfolioReducer: state.portfolioReducer,\n   userReducer: state.userReducer,\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(AddCardForm));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {storage} from '../../firebase';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Radio from '@material-ui/core/Radio';\n\nconst styling = theme => ({\n   sizeImg: {\n      height: 280,\n      width: 200\n   },\n   styleForm: {\n      width: 500,\n      background: `white`\n   },\n   customBtn: {\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white',\n      height: 10,\n      width: 80\n   },\n   customRadio: {\n\n   },\n   backgroundGreen: {\n      background: 'green'\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   margin: {\n      margin: 10\n   },\n   marginTop: {\n      marginTop: 100\n   },\n   marginRight: {\n      marginRight: 10\n   },\n   floatLeft: {\n      float: 'left'\n   }\n})\n\nconst newCard = {\n   user: 0,\n   sport: '',\n   athlete: '',\n   team:'',\n   card_brand:'',\n   tradeBlock: false,\n   price: '0',\n   details: '',\n   url:'',\n   image: null,\n   progress: 0,\n   addReady: false,\n   uploadReady: false,\n   open: false,\n   card: 0\n}\n\nclass EditCardForm extends Component {\n\n   state = newCard;\n  \n   handleOpenClick = () => {\n      this.setState({ \n         user: this.props.userReducer.id,\n         sport: this.props.card.sport,\n         athlete: this.props.card.athlete,\n         team: this.props.card.team,\n         card_brand: this.props.card.card_brand,\n         tradeBlock: this.props.card.tradeBlock,\n         price: this.props.card.price,\n         details: this.props.card.details,\n         url:this.props.card.image_url,\n         image: null,\n         progress: 0,\n         addReady: false,\n         uploadReady: false,\n         open: true,\n         card: this.props.card.card_id\n      });\n   };\n  \n   handleCloseClick = () => {\n      this.setState({\n         open: false,\n         uploadReady: false\n      });\n   };\n   \n   handleChange = (event) => {\n      this.setState({\n         [event.target.name]: event.target.value,\n      });\n   }\n\n   selectImage = (event) => {\n      if (event.target.files[0]) {\n         const targetImage = event.target.files[0]\n         this.setState({\n            image: targetImage,\n            uploadReady: true\n         })\n      }\n   }\n   \n   uploadImage = () => {\n      console.log(this.state);\n      // if(this.state.image === null){\n      //    alert(`- Please select an image for the card.\n      //          \\n- For best quality, frame your image to the size of the card and use good lighting.`);\n      //    return\n      // }\n      //ref has a function called put\n      const uploadTask = storage.ref(`images/${this.state.image.name}`).put(this.state.image);\n      //uploadTask.on('state_changed', progess, error, complete) //this is the format of the parameters, they are functions;\n      uploadTask.on('state_changed',\n      (snapshot) => {\n         //progress function parameter\n         const thisProgess = Math.round((snapshot.bytesTransferred / snapshot.totalBytes * 100)); //snapshot has a property of bytesTransferred\n         this.setState({progress: thisProgess});\n      },\n      (error) => {\n         //error function parameter\n         console.log(error)\n      },\n      (complete) => {\n         //complete function parameter\n         storage.ref('images').child(this.state.image.name).getDownloadURL().then(thisUrl => {\n            console.log(thisUrl);\n            alert('Image successfully uploaded!');\n            this.setState({\n               user: this.props.userReducer.id,\n               url: thisUrl,\n               addReady: true\n            });\n         })\n      });\n   }\n\n   confirmUpdate = () => {\n      if(this.state.sport === '' || this.state.athlete === '' || this.state.team === ''\n         || this.state.cardBrand === '' || this.state.details === '') {\n            return alert(\"Invalid: Missing input(s)\");\n      }\n      else {\n         this.props.dispatch({type: 'UPDATE_CARD', payload: this.state}) //inside of \n         this.setState({open: false});\n      }\n   }\n   \n   render(){\n      \n      const {classes} = this.props\n      console.log(this.state);\n      \n      // Conditional rendering to keep the \"Add Card\" button disabled until the form is completed\n      // let addButton = this.state.addReady === false ?\n      // <Button variant=\"contained\"  className={classes.customBtn} disabled>Confirm</Button>\n      // : <Button onClick={this.updateCard} variant=\"contained\"  className={`${classes.customBtn} ${classes.backgroundGreen}`}>Confirm</Button>\n      \n      let uploadButton = this.state.uploadReady === false ?\n      <Button onClick={this.uploadImage} disabled>Upload Image</Button>\n      : <Button onClick={this.uploadImage} >Upload Image</Button>\n      \n      return(\n         <section>\n            <div className={classes.alignCenter}>\n            \n               <Button onClick={this.handleOpenClick} className={ `${classes.customBtn} ${classes.backgroundGray}`}>\n                  <EditIcon className={classes.marginRight}/> Edit\n               </Button>\n            </div>\n            <Dialog\n               open={this.state.open}\n               onClose={this.handleCloseClick}\n               aria-labelledby=\"dialog-title\"\n            >\n               <DialogTitle id=\"dialog-title\">Edit Card</DialogTitle>\n               <DialogContent>\n                  <DialogContentText>The same image will be used if a new one is not uploaded.</DialogContentText>\n                  <form className={`${classes.styleForm} `}>\n                     <FormGroup>\n                        <FormControl >\n                        <TextField\n                              id=\"outlined-sport\"\n                              label=\"Sport\"\n                              name=\"sport\"\n                              value={this.state.sport}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-athlete\"\n                              label=\"Athlete\"\n                              name=\"athlete\"\n                              value={this.state.athlete}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-team\"\n                              label=\"Team\"\n                              name=\"team\"\n                              value={this.state.team}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-cardBrand\"\n                              label=\"Card Brand\"\n                              name=\"card_brand\"\n                              value={this.state.card_brand}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              required\n                           />\n                           <TextField\n                              id=\"outlined-details\"\n                              label=\"Details\"\n                              name=\"details\"\n                              value={this.state.details}\n                              onChange={this.handleChange}\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              multiline\n                              required\n                           /><br/>\n                           {uploadButton}\n                           <input  type=\"file\" onChange={this.selectImage}/>\n                           <br/>\n                           <div>\n                              <img src={this.state.url || 'https://via.placeholder.com/280x200'} alt=\"Upload image\" height=\"280\" width=\"200\"></img>\n                           </div>\n                        </FormControl>\n                     </FormGroup>\n                  </form>\n               </DialogContent>\n               <DialogActions>\n                  <Button onClick={this.confirmUpdate} variant=\"contained\"  className={`${classes.customBtn} ${classes.backgroundGreen}`}>Confirm</Button>\n                  <Button onClick={this.handleCloseClick} className={`${classes.customBtn} ${classes.backgroundGray}`} >Cancel</Button>\n               </DialogActions>\n            </Dialog>\n         </section>\n      );\n   }\n}\n\n/* {this.props.portfolioReducer.map( (card) => (\n               <div>\n                  <img src={card.image_url}/>\n               </div>\n            ))} */\n\nconst mapStateToProps = state => ({\n   portfolioReducer: state.portfolioReducer,\n   userReducer: state.userReducer,\n   //communityReducer: state.communityReducer\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(EditCardForm));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TradeIcon from '@material-ui/icons/AttachMoney';\nimport TradeIconOff from '@material-ui/icons/MoneyOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport swal from 'sweetalert';\n\nconst styling = theme => ({\n   customBtn: {\n      height: 10,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   sizeImg: {\n      height: 230,\n      width: 150\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   backgroundOrange: {\n      background: 'orange'\n   },\n   backgroundGreen: {\n      background: 'forestgreen'\n   },\n   blackFont: {\n      color: 'black'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   },\n   floatLeft: {\n      float: 'left'\n   },\n   tradeBlockBtn: {\n      width: 40,\n      height: 35,\n      color: 'black'\n   }\n\n})\n\n\n// const emptyState = {\n//    user: '',\n//    cardID: 0,\n//    tbBoolean:\n// }\n\nclass TradeBlockButton extends Component {\n   \n   state = {\n      user: this.props.userReducer.id,\n      cardId: this.props.card.card_id,\n      tbBoolean: this.props.card.trade_block,\n      price: this.props.card.price,\n      open: false,\n   }\n\n   updateTradeBlock = () => {\n      if(this.props.card.trade_block === false){\n         this.setState({open: true})\n      }\n      else {\n         swal({\n            title: \"Remove from Trade Block?\",\n            icon: \"warning\",\n            buttons: true,\n            \n          })\n         .then((willDelete) => {\n            if (willDelete) {\n               swal(\"Card Successfully Removed From Trade Block\", {\n                  icon: \"success\",\n               });\n               this.props.dispatch({type: 'UPDATE_TRADE_BLOCK', payload: this.state})\n            }\n            else {\n               swal(\"This card will remain on your trade block...\");\n            }\n          });\n      }\n   }\n   \n   confirmUpdate = () => {\n      this.props.dispatch({\n         type: 'UPDATE_TRADE_BLOCK',\n         payload: this.state\n      })\n      this.setState({open: false});\n   }\n   \n   handleCloseClick = () => {\n      this.setState({open: false});\n   };\n\n   \n   handleChange = (event) => {\n      this.setState({\n         [event.target.name]: event.target.value,\n      });\n   }\n   \n   // removeFromBlock = (id) => {\n   //    return (event) => {\n         \n   //    }\n   // }\n   \n   render(){\n      const {classes} = this.props\n      let tradeBlockBtn;\n      \n      // className={`${classes.customBtn} ${classes.backgroundRed}`}\n      // className={`${classes.customBtn} ${classes.backgroundGold}`}\n      \n      if(this.props && this.props.portfolioReducer.length > 0){\n         if(this.props.card.trade_block === false){\n            tradeBlockBtn = <div>\n               <div className={classes.alignCenter}>\n                  <Button onClick={this.updateTradeBlock} style={{minWidth:20}} className={`${classes.tradeBlockBtn} ${classes.floatLeft} ${classes.backgroundGreen}`}>\n                     <TradeIcon className={classes.marginRight}/>\n                  </Button>\n               </div>\n               <Dialog\n                  open={this.state.open}\n                  onClose={this.handleCloseClick}\n                  aria-labelledby=\"dialog-title\"\n               >\n                  <DialogTitle id=\"dialog-title\">Add Card to Trade Block</DialogTitle>\n                  <DialogContent>\n                     <DialogContentText>Choose your price!</DialogContentText>\n                     <form className={`${classes.styleForm} `}>\n                        <FormGroup>\n                           <FormControl >\n                           <TextField\n                                 id=\"outlined-price\"\n                                 label=\"Price\"\n                                 name=\"price\"\n                                 value={this.state.price}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                                 variant=\"outlined\"\n                                 required\n                              />\n                           </FormControl>\n                        </FormGroup>\n                     </form>\n                  </DialogContent>\n                  <DialogActions>\n                     <Button onClick={this.confirmUpdate} variant=\"contained\"  className={`${classes.customBtn} ${classes.backgroundGreen}`}>Confirm</Button>\n                     <Button onClick={this.handleCloseClick} className={`${classes.customBtn} ${classes.backgroundGray}`} >Cancel</Button>\n                  </DialogActions>\n               </Dialog>\n            </div>\n            }\n            else {\n               tradeBlockBtn = <div>\n                  <Button onClick={this.updateTradeBlock} style={{minWidth:20, minHeight:20}} className={`${classes.tradeBlockBtn} ${classes.floatLeft} ${classes.backgroundOrange}`}>\n                     <TradeIconOff/>\n                  </Button>\n               </div>\n            }\n      }\n      else {\n         tradeBlockBtn = <div></div>\n      }\n      \n      return(\n         <div>\n            {tradeBlockBtn}\n         </div>\n         \n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   userReducer: state.userReducer,\n   memberUsername: state.portfolioReducer.memberUsernameReducer,\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n   watchListReducer: state.watchListReducer\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(TradeBlockButton));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCardForm from './AddCardForm';\nimport EditCardForm from './EditCardForm';\nimport TradeBlockButton from './TradeBlockButton';\nimport Button from '@material-ui/core/Button';\nimport swal from 'sweetalert';\nimport Nav from '../Nav/Nav';\n\nconst styling = theme => ({\n   sizeImg: {\n      height: 280,\n      width: 200\n   },\n   customBtn: {\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white',\n      height: 10,\n      width: 80\n   },\n   customRadio: {\n\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   margin: {\n      margin: 20\n   },\n   marginTop: {\n      marginTop: 50\n   },\n   inlineBlock: {\n      display: 'inline-block'\n   },\n   styleForm: {\n      width: 500,\n      background: `gainsboro`\n   },\n   floatLeft: {\n      float: 'left'\n   },\n   floatRight: {\n      float: 'right'\n   },\n   tradeBlockBtn: {\n      width: 40,\n      background: 'orange',\n      color: 'black'\n   }\n})\n\n\nclass UserPortfolio extends Component {\n   \n   componentDidMount(){\n      this.props.dispatch({type: \"GET_USER_PORTFOLIO\", payload: this.props.userReducer.id}); //inside of portfolioSaga\n   }\n   \n   deleteCard = (card) => {\n      return (event) => {\n         swal({\n            title: \"Delete Card?\",\n            text: \"There's no going back...\",\n            icon: \"warning\",\n            buttons: true,\n            \n          })\n         .then((willDelete) => {\n            if (willDelete) {\n               swal(\"Successfully deleted!\", {\n                  icon: \"success\",\n               });\n               let deleteInfo = {\n                  cardId: card, // identifies which card to delete\n                  user: this.props.userReducer.id // identifies the user\n               }\n               this.props.dispatch({type: 'DELETE_CARD', payload: deleteInfo})\n            }\n            else {\n               swal(\"No Deletion...\");\n            }\n          });\n      }\n   }\n   \n   cardInfo = (card) => {\n      return (event) => {\n         alert(`Sport: ${card.sport}\n         \\nAthlete: ${card.athlete}\n         \\nTeam: ${card.team}\n         \\nCard Brand: ${card.card_brand}\n         \\nTrade Block: ${card.trade_block}\n         \\nPrice: $${card.price}\n         \\nDate: ${card.date.substring(0,10)}\n         \\nDetails: ${card.details}\n         `);\n      }\n   }\n\n   render(){\n      \n      console.log(this.props.portfolioReducer);\n      const {classes} = this.props\n\n      // let imagesArray;\n      // if(this.props && this.props.portfolioReducer.length > 0 ){\n      //    this.props.portfolioReducer.map(card=>\n      //       imagesArray = <div>\n      //          <img src={card.image_url}/>\n      //       </div>\n      // )}\n      // else { \n      //    imagesArray = <span></span>\n      // }\n      \n      // Conditional rendering to display each card\n      let portfolioArray = this.props && this.props.portfolioReducer.length > 0 ?\n        this.props.portfolioReducer.map(card=>\n         <div className={`${classes.inlineBlock} ${classes.alignCenter} ${classes.margin} ${classes.marginTop}`} key={card.id}>\n            <img onClick={this.cardInfo(card)} className={classes.sizeImg} src={card.image_url}/>\n            <div>\n               <p>{card.athlete}</p>\n               <p>{card.team}</p>\n            </div>\n            <div className={classes.alignCenter}>\n               <div className={classes.floatLeft}>\n                  <EditCardForm card={card} />\n               </div>\n               <div className={classes.floatLeft}>\n                  <Button onClick={this.deleteCard(card.card_id)} color=\"default\" className={`${classes.customBtn} ${classes.backgroundRed}`}>Delete</Button>\n               </div>\n               <div className={classes.floatLeft}>\n                  <TradeBlockButton card={card}/>\n               </div>\n            </div>\n         </div>\n        ) : <span></span>;\n      \n      return(\n         <section>\n            <Nav/>\n            <h1 className={classes.alignCenter}>Your Portfolio</h1>\n            <AddCardForm/> \n            <div style={{margin: 'auto'}} className={classes.alignCenter}>\n               {portfolioArray}\n            </div>      \n         </section>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n   userReducer: state.userReducer,\n   //communityReducer: state.communityReducer\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(UserPortfolio));\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\n\nconst styling = theme => ({\n   customBtn: {\n      height: 10,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   sizeImg: {\n      height: 230,\n      width: 150\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   backgroundGold: {\n      background: 'gold'\n   },\n   blackFont: {\n      color: 'black'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\n\nclass WatchButton extends Component {\n   \n   // componentDidMount = () => {\n   //    this.props.dispatch({type: 'GET_WATCH_LIST', payload:this.props.userReducer.id})\n   // }\n\n   updateWatch = (id) => {\n      return (event) => {\n         this.props.dispatch({\n            type: 'UPDATE_WATCH_LIST',\n            payload: {\n               watch_list_owner: this.props.owner,\n               id_of_card: id,\n            }\n         })\n      }\n   }\n\n   removeWatch = (id) => {\n      return (event) => {\n         this.props.dispatch({\n            type: 'REMOVE_WATCH_LIST_ITEM',\n            payload: {\n               watch_list_owner: this.props.owner,\n               watch_list_id: id,\n            }\n         })\n      }\n   }\n   \n   render(){\n      const {classes} = this.props\n      let watchButton;\n      \n      // className={`${classes.customBtn} ${classes.backgroundRed}`}\n      // className={`${classes.customBtn} ${classes.backgroundGold}`}\n      \n      if(this.props && this.props.watchListReducer.length > 0){\n         for(let card of this.props.watchListReducer){\n            if(card.card_id === this.props.cardId){\n               return watchButton = <div>\n                  <Button onClick={this.removeWatch(card.watch_list_id)} className={`${classes.customBtn} ${classes.backgroundRed}`}>Unwatch</Button>\n               </div>\n            }\n         }\n         watchButton = <div>\n               <Button onClick={this.updateWatch(this.props.cardId)} className={`${classes.blackFont} ${classes.customBtn} ${classes.backgroundGold}`}>Watch</Button>\n            </div>\n      }\n      else {\n         watchButton = <div>\n               <Button onClick={this.updateWatch(this.props.cardId)} className={`${classes.blackFont} ${classes.customBtn} ${classes.backgroundGold}`}>Watch</Button>\n            </div>\n      }\n      \n      return(\n         <div>\n            {watchButton}\n         </div>\n         \n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   userReducer: state.userReducer,\n   memberUsername: state.portfolioReducer.memberUsernameReducer,\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n   watchListReducer: state.watchListReducer\n});\n\n// const mapStateToProps = reduxState => ({\n//    reduxState\n// });\n\nexport default connect(mapStateToProps)(withStyles(styling)(WatchButton));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Button from '@material-ui/core/Button';\nimport WatchButton from './WatchButton';\nimport Nav from '../Nav/Nav';\n\nconst styling = theme => ({\n   customBtn: {\n      height: 10,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   sizeImg: {\n      height: 230,\n      width: 150\n   },\n   backgroundBlack: {\n      background: 'black'\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   backgroundGold: {\n      background: 'gold'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\n\nclass MemberTradeBlock extends Component {\n   \n   state = {\n      user: this.props.match.params.id\n   }\n   \n   componentDidMount () {\n      this.props.dispatch({type: 'GET_WATCH_LIST', payload: this.props.userReducer.id})\n      this.props.dispatch({type: 'GET_USER_PORTFOLIO', payload: this.state.user})\n      this.props.dispatch({type: 'GET_USERNAME', payload: this.state.user})\n      \n   }\n\n   cardInfo = (card) => {\n      return (event) => {\n         alert(`Sport: ${card.sport}\n         \\nDetails: ${card.details}`);\n      }\n   }\n\n   updateWatch = (id) => {\n      this.props.dispatch({\n         type: 'UPDATE_WATCH_LIST',\n         payload: {\n            id_of_card: id,\n            card_owner: this.state.user\n         }\n      })\n   }\n   \n   render(){\n      const {classes} = this.props\n      \n      console.log(this.state.user);\n      console.log(this.props.memberUsername[0])\n\n      let tradeBlockArr = []\n      let tradeBlockInsert;\n      let tableHeadInfo;\n      \n      this.props.portfolioReducer.map(card => {\n         if(card.trade_block === true){\n            tradeBlockArr.push(card);\n         }\n      })\n\n\n      console.log(tradeBlockArr);\n      if(tradeBlockArr.length === 0){\n         tableHeadInfo = <br></br>\n         tradeBlockInsert = <p className={classes.alignCenter}>No cards currently on this user's trade block, but take a look at their porfolio!</p>\n      }\n      else {\n         tableHeadInfo = <TableHead>\n            <TableRow >\n               <TableCell className={classes.alignCenter}>Image</TableCell>\n               <TableCell className={classes.alignCenter}>Athlete</TableCell>\n               <TableCell className={classes.alignCenter}>Team</TableCell>\n               <TableCell className={classes.alignCenter}>Card Brand</TableCell>\n               <TableCell className={classes.alignCenter}>Price</TableCell>\n               <TableCell className={classes.alignCenter}>Date Posted</TableCell>\n               <TableCell className={classes.alignCenter}>Watch</TableCell>\n            </TableRow>\n         </TableHead> \n         \n         tradeBlockInsert = this.props && this.props.portfolioReducer.length > 0  ?\n            tradeBlockArr.map(card=>\n               <TableRow key={card.id}>\n                  <TableCell className={classes.alignCenter}>\n                     <img onClick={this.cardInfo(card)} src={card.image_url} className={classes.sizeImg} />\n                  </TableCell>\n                  <TableCell className={classes.alignCenter}>{card.athlete}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.team}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.card_brand}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.price}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.date.substring(0,10)}</TableCell>\n                  <TableCell className={classes.alignCenter}>\n                     <WatchButton cardId={card.card_id} owner={this.props.userReducer.id}/>\n                  </TableCell>\n               </TableRow>\n            ) : <span>Null</span>;\n      }\n      \n\n        let headerDisplay = this.props && this.props.memberUsername.length > 0 ?\n      \n       <div className={`${classes.alignCenter} ${classes.margin} ${classes.marginTop}`}>\n          <h1 className={classes.alignCenter}>{this.props.memberUsername[0].username}'s Trade Block</h1>\n       </div>\n      : <span></span>; \n      \n      return(\n         <div>\n            <Nav/>\n            <section>\n               {headerDisplay}\n            </section>\n            <Table>\n               {tableHeadInfo}\n               <TableBody>\n                  {tradeBlockInsert}\n               </TableBody>\n            </Table>\n         </div>\n         \n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   userReducer: state.userReducer,\n   memberUsername: state.portfolioReducer.memberUsernameReducer,\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n   watchListReducer: state.watchListReducer\n});\n\n// const mapStateToProps = reduxState => ({\n//    reduxState\n// });\n\nexport default connect(mapStateToProps)(withStyles(styling)(MemberTradeBlock));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport swal from 'sweetalert';\nimport Nav from '../Nav/Nav';\n\nconst styling = theme => ({\n   sizeImg: {\n      height: 280,\n      width: 200\n   },\n   customBtn: {\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white',\n      height: 10,\n      width: 80\n   },\n   customRadio: {\n\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   margin: {\n      margin: 10\n   },\n   marginTop: {\n      marginTop: 50\n   },\n   inlineBlock: {\n      display: 'inline-block'\n   },\n   styleForm: {\n      width: 500,\n      background: `gainsboro`\n   }\n})\n\nclass MemberPortfolio extends Component {\n   \n   state = {\n      user: this.props.match.params.id\n   }\n   \n   componentDidMount () {\n      this.props.dispatch({type: 'GET_USER_PORTFOLIO', payload: this.state.user})\n      this.props.dispatch({type: 'GET_USERNAME', payload: this.state.user})\n      \n   }\n\n   cardInfo = (card) => {\n      return (event) => {\n         let tbBoolean = ''\n         if(card.trade_block === true){\n            tbBoolean = 'Yes'\n         }\n         else {\n            tbBoolean = 'No'\n         }\n         alert(`Sport: ${card.sport}\n         \\nAthlete: ${card.athlete}\n         \\nTeam: ${card.team}\n         \\nCard Brand: ${card.card_brand}\n         \\nTrade Block: ${tbBoolean}\n         \\nPrice: $${card.price}\n         \\nDate Posted (y/m/d): ${card.date.substring(0,10)}\n         \\nDetails: ${card.details}\n         `);\n      }\n   }\n   \n   render(){   \n      \n      const {classes} = this.props\n      console.log(this.state.user);\n      console.log('')\n      \n      // Conditional rendering to display each card\n      let portfolioArray = this.props && this.props.portfolioReducer.length > 0 && this.props.memberUsername.length > 0 ?\n        this.props.portfolioReducer.map(card=>\n         <div className={`${classes.inlineBlock} ${classes.alignCenter} ${classes.margin} ${classes.marginTop}`} key={card.id}>\n            <img onClick={this.cardInfo(card)} className={classes.sizeImg} src={card.image_url}/>\n            <div>\n               <p>{card.athlete}</p>\n               <p>{card.team}</p>\n            </div>\n         </div>\n        ) : <span></span>;\n\n      let headerDisplay = this.props && this.props.memberUsername.length > 0 ?\n      \n       <div className={`${classes.alignCenter} ${classes.margin} ${classes.marginTop}`}>\n          <h1 className={classes.alignCenter}>{this.props.memberUsername[0].username}'s Portfolio</h1>\n       </div>\n      : <span></span>; \n      \n      return(\n         <section>\n            <Nav/>\n            {headerDisplay}\n            <div style={{margin: 'auto'}} className={classes.alignCenter}>\n               {portfolioArray} \n            </div>     \n         </section>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   // have to do portfolioReducer.portfolioReducer because there are two reducers inside of the portfolioReducer from props\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n   memberUsername: state.portfolioReducer.memberUsernameReducer,\n   userReducer: state.userReducer,\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(MemberPortfolio));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Nav from '../Nav/Nav';\n\nconst styling = theme => ({\n   customBtn: {\n      height: 10,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   sizeImg: {\n      height: 230,\n      width: 150\n   },\n   backgroundBlack: {\n      background: 'black'\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   backgroundGreen: {\n      background: 'green'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\nclass WatchList extends Component {\n   \n   state = {\n      id_of_card: 0,\n      card_owner: this.props.match.params.id\n   }\n   \n   componentDidMount () {\n      this.props.dispatch({type: 'GET_WATCH_LIST', payload: this.props.userReducer.id})\n   }\n\n   cardInfo = (card) => {\n      return (event) => {\n         alert(`Sport: ${card.sport}\n         \\nDetails: ${card.details}`);\n      }\n   }\n\n   goToPortfolio = (id) => {\n      return (event) => {\n         this.props.history.push(`/member-portfolio/${id}`)\n      }\n   }\n\n   goToTradeBlock = (id) => {\n      return (event) => {\n         this.props.history.push(`/member-trade-block/${id}`)\n      }\n   }\n\n   removeWatch = (id) => {\n      return (event) => {\n         this.props.dispatch({\n            type: 'REMOVE_WATCH_LIST_ITEM',\n            payload: {\n               watch_list_owner: this.props.userReducer.id,\n               watch_list_id: id,\n            }\n         })\n      }\n   }\n\n   render(){\n\n      const {classes} = this.props\n\n      let watchListInsert;\n      let tableHeadInfo;\n      \n      if(this.props.watchListReducer.length === 0){\n         tableHeadInfo = <br></br>\n         watchListInsert = <p className={classes.alignCenter}>No cards currently being watched...</p>\n      }\n      else {\n         tableHeadInfo =\n            <TableHead>\n               <TableRow >\n                  <TableCell className={classes.alignCenter}>Card</TableCell>\n                  <TableCell className={classes.alignCenter}>User</TableCell>\n                  <TableCell className={classes.alignCenter}>Price</TableCell>\n                  <TableCell className={classes.alignCenter}>Date Posted</TableCell>\n                  <TableCell className={classes.alignCenter}>Purchase</TableCell>\n                  <TableCell className={classes.alignCenter}>Unwatch</TableCell>\n               </TableRow>\n            </TableHead>\n         \n         watchListInsert = this.props && this.props.watchListReducer.length > 0 ?\n            this.props.watchListReducer.map(card=>\n               <TableRow key={card.id}>\n                  <TableCell className={classes.alignCenter}>\n                     <img onClick={this.cardInfo(card)} src={card.image_url} className={classes.sizeImg} />\n                  </TableCell>\n                  <TableCell className={`${classes.font20} ${classes.alignCenter}`}>\n                     <div className={classes.marginTop}>\n                        {card.card_owner}\n                     </div>\n                     <div className={classes.marginTop}>\n                        {/* user_id refers to the owner of the card being watched */}\n                        <Button onClick={this.goToPortfolio(card.user_id)} variant=\"contained\" className={`${classes.customBtn} ${classes.backgroundBlack}`}>Portfolio</Button>\n                        <Button onClick={this.goToTradeBlock(card.user_id)} variant=\"contained\" className={`${classes.customBtn} ${classes.backgroundGray}`}>Trade Block</Button>\n                     </div>\n                  </TableCell>\n                  <TableCell className={classes.alignCenter}>{card.price}</TableCell>\n                  <TableCell className={classes.alignCenter}>{card.date.substring(0,10)}</TableCell>\n                  <TableCell className={classes.alignCenter}>\n                     <Button  className={`${classes.customBtn} ${classes.backgroundGreen}`} variant=\"contained\">Add to Cart</Button>\n                  </TableCell>\n                  <TableCell className={classes.alignCenter}>\n                     <Button  onClick={this.removeWatch(card.watch_list_id)} className={`${classes.customBtn} ${classes.backgroundRed}`} variant=\"contained\">UnWatch</Button>\n                  </TableCell>\n               </TableRow>\n         ) : <span></span>;\n      }\n      \n      let headerDisplay =\n         <div className={`${classes.alignCenter} ${classes.margin} ${classes.marginTop}`}>\n            <h1 className={classes.alignCenter}>Your Watch List</h1>\n         </div>\n      \n      return(\n         <div>\n            <Nav/>\n            <section>\n               {headerDisplay}\n            </section>\n            <Table>\n               {tableHeadInfo}\n               <TableBody>\n                  {watchListInsert}\n               </TableBody>\n            </Table>\n         </div>\n         \n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   watchListReducer: state.watchListReducer,\n   userReducer: state.userReducer,\n   memberUsername: state.portfolioReducer.memberUsernameReducer,\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n});\n\n// const mapStateToProps = reduxState => ({\n//    reduxState\n// });\n\nexport default connect(mapStateToProps)(withStyles(styling)(WatchList));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styling = theme => ({\n   customBtn: {\n      height: 10,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   sizeImg: {\n      height: 230,\n      width: 150\n   },\n   backgroundRed: {\n      background: 'firebrick'\n   },\n   backgroundBlue: {\n      background: 'royalblue'\n   },\n   blackFont: {\n      color: 'black'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\n\nclass MessageButton extends Component {\n   \n   // componentDidMount = () => {\n   //    this.props.dispatch({type: 'GET_WATCH_LIST', payload:this.props.userReducer.id})\n   // }\n\n   // cardInfo = (card) => {\n   //    return (event) => {\n   //       alert(`Sport: ${card.sport}\n   //       \\nDetails: ${card.details}`);\n   //    }\n   // }\n\n   messageUser = (id) => {\n      return (event) => {\n         this.props.dispatch({\n            type: 'SEND_MESSAGE',\n            payload: {}\n         })\n      }\n   }\n\n   \n   render(){\n      const {classes} = this.props\n      let messageButton;\n      \n      if(this.props && this.props.communityReducer.length > 0){\n         if(this.props.userReducer.id === this.props.member){\n            messageButton = <div></div>\n         }\n         else {\n            messageButton = <div>\n               <Button onClick={this.messageUser(this.props.member)} color=\"primary\" className={`${classes.customBtn} ${classes.backgroundBlue}`}>Message</Button>\n            </div>\n         }\n      }\n      \n      return(\n         <div>\n            {messageButton}\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   userReducer: state.userReducer,\n   memberUsername: state.portfolioReducer.memberUsernameReducer,\n   portfolioReducer: state.portfolioReducer.portfolioReducer,\n   watchListReducer: state.watchListReducer,\n   communityReducer: state.communityReducer,\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(MessageButton));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport MessageButton from './MessageButton';\nimport Nav from '../Nav/Nav';\n\nconst styling = theme => ({\n   customBtn: {\n      height: 10,\n      width: 80,\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: 'white'\n   },\n   backgroundBlack: {\n      background: 'black'\n   },\n   backgroundGray: {\n      background: 'dimgray'\n   },\n   font20: {\n      fontSize: 20\n   },\n   alignCenter: {\n      textAlign: 'center'\n   },\n   marginTop: {\n      marginTop: 20\n   }\n\n})\n\n\nclass CommunityPage extends Component {\n   \n   componentDidMount(){\n      this.props.dispatch({type: \"GET_COMMUNITY\"}); //inside of communitySaga\n   }\n\n   goToPortfolio = (id) => {\n      return (event) => {\n         this.props.history.push(`/member-portfolio/${id}`)\n      }\n   }\n\n   goToTradeBlock = (id) => {\n      return (event) => {\n         this.props.history.push(`/member-trade-block/${id}`)\n      }\n   }\n   \n   render(){\n      \n      console.log(this.props.userReducer);\n      console.log(this.props.portfolioReducer);\n      console.log(this.props.communityReducer);\n\n      const {classes} = this.props\n      \n      let communityInsert = this.props && this.props.communityReducer.length > 0 ?\n        this.props.communityReducer.map(member=>\n            <TableRow key={member.id}>\n               <TableCell className={`${classes.font20} ${classes.alignCenter}`}>\n                  <div className={classes.marginTop}>\n                     {member.username}\n                  </div>\n                  <div className={classes.marginTop}>\n                     <Button onClick={this.goToPortfolio(member.id)} className={`${classes.customBtn} ${classes.backgroundBlack}`}>Portfolio</Button>\n                     <Button onClick={this.goToTradeBlock(member.id)} className={`${classes.customBtn} ${classes.backgroundGray}`}>Trade Block</Button>\n                  </div>\n               </TableCell>\n               <TableCell className={`${classes.alignCenter} ${classes.font20}`}>{member.count}</TableCell>\n               {/* <TableCell className={classes.alignCenter}>Top Card #1</TableCell> */}\n               {/* <TableCell className={classes.alignCenter}>Top Card #2</TableCell> */}\n               <TableCell className={classes.alignCenter}>\n                  <MessageButton member={member.id}/>\n                  {/* <Button variant=\"contained\" color=\"primary\" className={classes.customBtn}>Message</Button> */}\n               </TableCell>\n            </TableRow>\n        ) : <span></span>;\n      \n      return(\n         <div>\n         <Nav/>\n         <section>\n            <h1 className={classes.alignCenter}>Community</h1>\n         </section>\n         <Table>\n            <TableHead>\n               <TableRow >\n                  <TableCell className={classes.alignCenter}>User</TableCell>\n                  <TableCell className={classes.alignCenter}>Number of Cards</TableCell>\n                  {/* <TableCell className={classes.alignCenter}>Top Card #1</TableCell>\n                  <TableCell className={classes.alignCenter}>Top Card #2</TableCell> */}\n                  <TableCell className={classes.alignCenter}>Message</TableCell>\n               </TableRow>\n            </TableHead>\n            <TableBody >\n               {communityInsert}\n            </TableBody>\n         </Table>\n         </div>\n         \n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   userReducer: state.userReducer,\n   communityReducer: state.communityReducer,\n   //portfolioReducer: state.portfolioReducer,\n});\n\n// const mapStateToProps = reduxState => ({\n//    reduxState\n// });\n\nexport default connect(mapStateToProps)(withStyles(styling)(CommunityPage));\n","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport UserTradeBlock from '../UserTradeBlock/UserTradeBlock';\nimport UserPortfolio from '../UserPortfolio/UserPortfolio';\nimport MemberTradeBlock from '../MemberTradeBlock/MemberTradeBlock';\nimport MemberPortfolio from '../MemberPortfolio/MemberPortfolio';\nimport WatchList from '../WatchList/WatchList';\nimport CommunityPage from '../CommunityPage/CommunityPage';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'}) //inside of userSaga\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          {/* <Nav /> */}\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            <Route\n              exact\n              path=\"/community\"\n              component={CommunityPage}\n            />\n            <Route\n              exact\n              path=\"/member-portfolio/:id\"\n              component={MemberPortfolio}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={UserPage}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see their portfolio page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/trade-block\"\n              component={UserTradeBlock}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/user-portfolio\"\n              component={UserPortfolio}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/watch-list\"\n              component={WatchList}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/member-trade-block/:id\"\n              component={MemberTradeBlock}\n            />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\n//Fonts\nimport 'typeface-alegreya-sans-sc';\nimport 'typeface-abel';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}